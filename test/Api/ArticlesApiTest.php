<?php
/**
 * ArticlesApiTest
 * PHP version 7.4
 *
 * @category Class
 * @package  OpenAPI\Client\Radix
 * @author   OpenAPI Generator team
 * @link     https://openapi-generator.tech
 */

/**
 * IM.Core.Api.Radix
 *
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 24.39.1
 * Generated by: https://openapi-generator.tech
 * Generator version: 7.5.0
 */

/**
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Please update the test case below to test the endpoint.
 */

namespace OpenAPI\Client\Radix\Test\Api;

use \OpenAPI\Client\Radix\Configuration;
use \OpenAPI\Client\Radix\ApiException;
use \OpenAPI\Client\Radix\ObjectSerializer;
use PHPUnit\Framework\TestCase;

/**
 * ArticlesApiTest Class Doc Comment
 *
 * @category Class
 * @package  OpenAPI\Client\Radix
 * @author   OpenAPI Generator team
 * @link     https://openapi-generator.tech
 */
class ArticlesApiTest extends TestCase
{

    /**
     * Setup before running any test cases
     */
    public static function setUpBeforeClass(): void
    {
    }

    /**
     * Setup before running each test case
     */
    public function setUp(): void
    {
    }

    /**
     * Clean up after running each test case
     */
    public function tearDown(): void
    {
    }

    /**
     * Clean up after running all test cases
     */
    public static function tearDownAfterClass(): void
    {
    }

    /**
     * Test case for apiV1ArticlesAlternatesDelete
     *
     * Delete an article-alternate.
     *
     */
    public function testApiV1ArticlesAlternatesDelete()
    {
        // TODO: implement
        self::markTestIncomplete('Not implemented');
    }

    /**
     * Test case for apiV1ArticlesAlternatesGet
     *
     * Returns a list of article-alternates.
     *
     */
    public function testApiV1ArticlesAlternatesGet()
    {
        // TODO: implement
        self::markTestIncomplete('Not implemented');
    }

    /**
     * Test case for apiV1ArticlesAlternatesIdIdGet
     *
     * Returns the article-alternate with this ID.
     *
     */
    public function testApiV1ArticlesAlternatesIdIdGet()
    {
        // TODO: implement
        self::markTestIncomplete('Not implemented');
    }

    /**
     * Test case for apiV1ArticlesAlternatesPatch
     *
     * Update an article-alternate.
     *
     */
    public function testApiV1ArticlesAlternatesPatch()
    {
        // TODO: implement
        self::markTestIncomplete('Not implemented');
    }

    /**
     * Test case for apiV1ArticlesAlternatesPost
     *
     * Creating an article-alternate.
     *
     */
    public function testApiV1ArticlesAlternatesPost()
    {
        // TODO: implement
        self::markTestIncomplete('Not implemented');
    }

    /**
     * Test case for apiV1ArticlesBarcodesDelete
     *
     * Delete an article-barcode.
     *
     */
    public function testApiV1ArticlesBarcodesDelete()
    {
        // TODO: implement
        self::markTestIncomplete('Not implemented');
    }

    /**
     * Test case for apiV1ArticlesBarcodesGet
     *
     * Returns a list of article-barcodes.
     *
     */
    public function testApiV1ArticlesBarcodesGet()
    {
        // TODO: implement
        self::markTestIncomplete('Not implemented');
    }

    /**
     * Test case for apiV1ArticlesBarcodesIdIdGet
     *
     * Returns the article-barcode with this ID.
     *
     */
    public function testApiV1ArticlesBarcodesIdIdGet()
    {
        // TODO: implement
        self::markTestIncomplete('Not implemented');
    }

    /**
     * Test case for apiV1ArticlesBarcodesPatch
     *
     * Update an article-barcode.
     *
     */
    public function testApiV1ArticlesBarcodesPatch()
    {
        // TODO: implement
        self::markTestIncomplete('Not implemented');
    }

    /**
     * Test case for apiV1ArticlesBarcodesPost
     *
     * Creating an article-barcode.
     *
     */
    public function testApiV1ArticlesBarcodesPost()
    {
        // TODO: implement
        self::markTestIncomplete('Not implemented');
    }

    /**
     * Test case for apiV1ArticlesCountGet
     *
     * Returns the count of articles.
     *
     */
    public function testApiV1ArticlesCountGet()
    {
        // TODO: implement
        self::markTestIncomplete('Not implemented');
    }

    /**
     * Test case for apiV1ArticlesDepositDataDelete
     *
     * Delete an article-depositdata.
     *
     */
    public function testApiV1ArticlesDepositDataDelete()
    {
        // TODO: implement
        self::markTestIncomplete('Not implemented');
    }

    /**
     * Test case for apiV1ArticlesDepositDataGet
     *
     * Returns a list of article-depositdata.
     *
     */
    public function testApiV1ArticlesDepositDataGet()
    {
        // TODO: implement
        self::markTestIncomplete('Not implemented');
    }

    /**
     * Test case for apiV1ArticlesDepositDataIdIdGet
     *
     * Returns the article-depositdata with this ID.
     *
     */
    public function testApiV1ArticlesDepositDataIdIdGet()
    {
        // TODO: implement
        self::markTestIncomplete('Not implemented');
    }

    /**
     * Test case for apiV1ArticlesDepositDataPatch
     *
     * Update an article-depositdata.
     *
     */
    public function testApiV1ArticlesDepositDataPatch()
    {
        // TODO: implement
        self::markTestIncomplete('Not implemented');
    }

    /**
     * Test case for apiV1ArticlesDepositDataPost
     *
     * Creating an article-depositdata.
     *
     */
    public function testApiV1ArticlesDepositDataPost()
    {
        // TODO: implement
        self::markTestIncomplete('Not implemented');
    }

    /**
     * Test case for apiV1ArticlesGet
     *
     * Returns a list of articles.
     *
     */
    public function testApiV1ArticlesGet()
    {
        // TODO: implement
        self::markTestIncomplete('Not implemented');
    }

    /**
     * Test case for apiV1ArticlesIdIdAlternatesGet
     *
     * Returns a list of article-alternates with this article id.
     *
     */
    public function testApiV1ArticlesIdIdAlternatesGet()
    {
        // TODO: implement
        self::markTestIncomplete('Not implemented');
    }

    /**
     * Test case for apiV1ArticlesIdIdBarcodesGet
     *
     * Returns a list of article-barcodes with this article id.
     *
     */
    public function testApiV1ArticlesIdIdBarcodesGet()
    {
        // TODO: implement
        self::markTestIncomplete('Not implemented');
    }

    /**
     * Test case for apiV1ArticlesIdIdDepositDataGet
     *
     * Returns a list of article-depositdata with this article id.
     *
     */
    public function testApiV1ArticlesIdIdDepositDataGet()
    {
        // TODO: implement
        self::markTestIncomplete('Not implemented');
    }

    /**
     * Test case for apiV1ArticlesIdIdGet
     *
     * Returns the article with this ID.
     *
     */
    public function testApiV1ArticlesIdIdGet()
    {
        // TODO: implement
        self::markTestIncomplete('Not implemented');
    }

    /**
     * Test case for apiV1ArticlesIdIdMeasurementUnitsGet
     *
     * Returns a list of article-measurementunits with this article id.
     *
     */
    public function testApiV1ArticlesIdIdMeasurementUnitsGet()
    {
        // TODO: implement
        self::markTestIncomplete('Not implemented');
    }

    /**
     * Test case for apiV1ArticlesIdIdPricesGet
     *
     * Returns a list of article-prices with this article id.
     *
     */
    public function testApiV1ArticlesIdIdPricesGet()
    {
        // TODO: implement
        self::markTestIncomplete('Not implemented');
    }

    /**
     * Test case for apiV1ArticlesIdIdSupplierCustomerNumberGet
     *
     * Returns a list of article-suppliercustomernumbers with this article id.
     *
     */
    public function testApiV1ArticlesIdIdSupplierCustomerNumberGet()
    {
        // TODO: implement
        self::markTestIncomplete('Not implemented');
    }

    /**
     * Test case for apiV1ArticlesListGet
     *
     * Returns a list of articles with minimal data.
     *
     */
    public function testApiV1ArticlesListGet()
    {
        // TODO: implement
        self::markTestIncomplete('Not implemented');
    }

    /**
     * Test case for apiV1ArticlesMeasurementUnitsDelete
     *
     * Delete an article-measurementunit.
     *
     */
    public function testApiV1ArticlesMeasurementUnitsDelete()
    {
        // TODO: implement
        self::markTestIncomplete('Not implemented');
    }

    /**
     * Test case for apiV1ArticlesMeasurementUnitsGet
     *
     * Returns a list of article-measurementunits.
     *
     */
    public function testApiV1ArticlesMeasurementUnitsGet()
    {
        // TODO: implement
        self::markTestIncomplete('Not implemented');
    }

    /**
     * Test case for apiV1ArticlesMeasurementUnitsIdIdGet
     *
     * Returns the article-measurementunit with this ID.
     *
     */
    public function testApiV1ArticlesMeasurementUnitsIdIdGet()
    {
        // TODO: implement
        self::markTestIncomplete('Not implemented');
    }

    /**
     * Test case for apiV1ArticlesMeasurementUnitsPatch
     *
     * Update an article-measurementunit.
     *
     */
    public function testApiV1ArticlesMeasurementUnitsPatch()
    {
        // TODO: implement
        self::markTestIncomplete('Not implemented');
    }

    /**
     * Test case for apiV1ArticlesMeasurementUnitsPost
     *
     * Creating an article-measurementunit.
     *
     */
    public function testApiV1ArticlesMeasurementUnitsPost()
    {
        // TODO: implement
        self::markTestIncomplete('Not implemented');
    }

    /**
     * Test case for apiV1ArticlesPatch
     *
     * Updating an article.
     *
     */
    public function testApiV1ArticlesPatch()
    {
        // TODO: implement
        self::markTestIncomplete('Not implemented');
    }

    /**
     * Test case for apiV1ArticlesPost
     *
     * Creating an article.
     *
     */
    public function testApiV1ArticlesPost()
    {
        // TODO: implement
        self::markTestIncomplete('Not implemented');
    }

    /**
     * Test case for apiV1ArticlesQuantitiesGet
     *
     * Returns a list of article-quantities.
     *
     */
    public function testApiV1ArticlesQuantitiesGet()
    {
        // TODO: implement
        self::markTestIncomplete('Not implemented');
    }

    /**
     * Test case for apiV1ArticlesSupplierCustomerNumbersDelete
     *
     * Delete an article-suppliercustomernumber.
     *
     */
    public function testApiV1ArticlesSupplierCustomerNumbersDelete()
    {
        // TODO: implement
        self::markTestIncomplete('Not implemented');
    }

    /**
     * Test case for apiV1ArticlesSupplierCustomerNumbersGet
     *
     * Returns a list of article-suppliercustomernumber.
     *
     */
    public function testApiV1ArticlesSupplierCustomerNumbersGet()
    {
        // TODO: implement
        self::markTestIncomplete('Not implemented');
    }

    /**
     * Test case for apiV1ArticlesSupplierCustomerNumbersIdIdGet
     *
     * Returns the article-suppliercustomernumber with this ID.
     *
     */
    public function testApiV1ArticlesSupplierCustomerNumbersIdIdGet()
    {
        // TODO: implement
        self::markTestIncomplete('Not implemented');
    }

    /**
     * Test case for apiV1ArticlesSupplierCustomerNumbersPatch
     *
     * Update an article-suppliercustomernumber.
     *
     */
    public function testApiV1ArticlesSupplierCustomerNumbersPatch()
    {
        // TODO: implement
        self::markTestIncomplete('Not implemented');
    }

    /**
     * Test case for apiV1ArticlesSupplierCustomerNumbersPost
     *
     * Creating an article-suppliercustomernumber.
     *
     */
    public function testApiV1ArticlesSupplierCustomerNumbersPost()
    {
        // TODO: implement
        self::markTestIncomplete('Not implemented');
    }
}
